s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
r
s
r
n
n
n
n
n
n
n
q
r
q
b main
r
q
b main
r
cyclic
cyclic(50)
cyclic 50
r
cyclic 50 > input.txt
ls
r < (cyclic 50 )
r < < (cyclic 50 )
r << (cyclic 50 )
r <<cyclic 50 
s
s
s
n
n
r
n
n
n
n
n
n
n
n
cyclic 50 > input.txt
r
qaqaqaqaqaqaqaqawdadfadfadfasdfasdfasdfasdfasdfasdf
n
n
n
n
n
n
n
q
r
r
q
q
r <input.txt
q
r < input.txt
cyclic_dins
cyclic_find
cyclic
cyclic 5
q
r < input.txt
r < input.txt
p $rsp
cyclic -l 6161616c6161616b
cyclic -l 0x6161616c6161616b
cyclic -l 0x6161616c6161616b -n 8
cyclic -n 8
q
r  < input.txt
cyclic -n 8 -l 0x6161616161616166
q
q
q
q
b win
b printflag
x printflag
q
r < input.txt
d main
dissasm main
info
info symbol
info symbol main
r < input.txt
info 
help
q
pwndbg
aslr
stack
vmmap
b main
r
vmmap
source
gotplt
canary
canary
canary
main
printflag
q
info functions
info printflag
x main
x printflag
x $printflag
disaasm printflag
help
q
b main
r <input.txt
r
r
r
r
r
r
r
r
q
r <input.txt
info functions
info printflag
q
disassemble main
b main
r
disassemble main
disassemble printflag
q
info functions
b main
r
info functions
got
aslr
alsr on
disable-randomization off
show disable-randomization
info functions printflag
disassembly printflag
disassemble printflag
q
r <input.txt
q
q
r <input.txt
q
r < input.txt
cyclic -n 8 -l 0x6161616161616166
q
r <input.txt
x $rsp
x/q $rsp
x/b $rsp
x/8b $rsp
x/sb $rsp
q
r <input.txt
q
r <input.txt
q
r <input.txt
q
r <input.txt
q
r <input.txt
q
r <input.txt
x \4rsp
x $rsp
q
r <input.txt
q
r <input.txt
disassemble printflag
q
r <input.txt
disassembly printflag
disassemble printflag
q
r <input.txt
q
r <input.txt
q
r <input.txt
b 20
r <input.txt
n
n
n
n
n
r
q
b 20
r <input.txt
n
n
n
q
b 20
r <input.txt
s
s
s
s
s
s
r
q
r <input.txt
q
r <input.txt
disasembly printflag
disasemble printflag
disassemble printflag
q
r <input.txt
r <input.txt
r <input.txt
r <input.txt
r <input.txt
r <input.txt
r <input.txt
r <input.txt
r <input.txt
r <input.txt
q
